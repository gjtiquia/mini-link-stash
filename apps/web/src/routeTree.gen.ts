// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as AppLinksRouteImport } from './routes/app/links/route'
import { Route as AppDashboardRouteImport } from './routes/app/dashboard.route'

// Create Virtual Routes

const AboutIndexLazyImport = createFileRoute('/about/')()
const AppLinksIndexLazyImport = createFileRoute('/app/links/')()

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AboutIndexLazyRoute = AboutIndexLazyImport.update({
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about/index.lazy').then((d) => d.Route))

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const AppLinksRouteRoute = AppLinksRouteImport.update({
  path: '/links',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDashboardRouteRoute = AppDashboardRouteImport.update({
  path: '/dashboard',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() => import('./routes/app/dashboard.lazy').then((d) => d.Route))

const AppLinksIndexLazyRoute = AppLinksIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AppLinksRouteRoute,
} as any).lazy(() =>
  import('./routes/app/links/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/app/dashboard': {
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/links': {
      preLoaderRoute: typeof AppLinksRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/login/': {
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      preLoaderRoute: typeof AboutIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/app/links/': {
      preLoaderRoute: typeof AppLinksIndexLazyImport
      parentRoute: typeof AppLinksRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AppRouteRoute.addChildren([
    AppDashboardRouteRoute,
    AppLinksRouteRoute.addChildren([AppLinksIndexLazyRoute]),
  ]),
  LoginIndexRoute,
  AboutIndexLazyRoute,
])
